plugins {
    id 'java'
    id 'antlr'
}

group 'fsynth.program'
version "1.0-ARTIFACT"

//noinspection GroovyUnusedAssignment
sourceCompatibility = 1.11

project.ext.deploydir = "$projectDir/bin"

repositories {
    mavenCentral()
}

dependencies {
    antlr "org.antlr:antlr4:4.9.2"
//    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    implementation group: 'org.json', name: 'json', version: '20210307'
    implementation group: 'commons-cli', name: 'commons-cli', version: '1.4'
    implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.4'
    implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.6'
    implementation group: 'org.reflections', name: 'reflections', version: '0.9.12'
    implementation 'com.google.api-client:google-api-client:1.30.4'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.30.6'
    implementation 'com.google.apis:google-api-services-sheets:v4-rev581-1.25.0'
    implementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.2'
    implementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.2'
    implementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.7.2'
    implementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.7.2'
    implementation group: 'org.junit.platform', name: 'junit-platform-reporting', version: '1.7.2'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
    test {
        java {
            srcDirs = ["src/test/java"]
        }
    }
}

wrapper {
    version '7.3.3'
}

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ["-visitor", "-long-messages"]
}
generateGrammarSource {
    outputDirectory = file("src/main/java/fsynth/program/generated")
    arguments += ["-package", "fsynth.program.generated"]
}

task copyRuntimeLibs(type: Copy) {
    into "${deploydir}/lib"
    from configurations.runtimeClasspath
}

task copyOracleScripts(type: Copy) {
    into "${deploydir}"
    from "$projectDir"
    include 'ddmindiff.py'
}
task copySourceTree(type: Sync) {
    dependsOn generateGrammarSource
    from "$projectDir/src"
    into "${deploydir}/src"
}
task copySubjects(type: Sync) {
    from "$projectDir/fsynth-subjects"
    into "${deploydir}/subjects"
    include '**/*.c'
    include '**/*.h'
    include '**/*.py'
    include '**/Makefile'
}
compileJava {
    options.encoding = "UTF-8"
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

task buildJar(type: Jar) {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Main-Class': 'fsynth.program.Main',
                'Class-Path': configurations.runtimeClasspath.collect { 'lib/' + file(it).name }.join(' ')
        )
    }

    archiveFileName = 'fsynth.jar'
    archiveVersion = project.version
    with jar
}

task deployJar(type: Copy) {
    dependsOn copyRuntimeLibs
    dependsOn buildJar
    dependsOn copyOracleScripts
    dependsOn copySourceTree
    dependsOn copySubjects
    from buildJar
    into "${deploydir}"
}
